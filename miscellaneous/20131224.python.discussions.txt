dx: In sft.py, L80, I do not think the node will be infected FOR SURE when the message is malicious. From the 
    motivating example in the writeup, I think the infection given a malicious message is still probabilistic.
    (I saw your notes to the SFT class later. It is a preliminary version. We will include \pi^{sp} and
    \pi^{st} eventually. If this is the case, then I have no problem.)

dx: In sft.py, what is the difference between ``state" and ``states"?

dx: In sft_net.py, L85, each x in cross_S is a 2-element tuple if I understand correctly, right? Because
    cross_S is a Cartesian product. Is there convinience that you list(x) rather than keep x as a tuple?

dx: In sft_net.py, loop ranging from L105 to L115, I did not see any restriction such that the node cannot 
    send messages to itself. Does that mean the list node.sends_to already include such a restriction, i.e.
    `itself' is not in node.sends_to? If that is the case, maybe we can add an explicit assertion for safety.
    That is, `assert this_node.name is not in this_node.sends_to'.


